{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?aea2","webpack:///./src/components/Registros.vue?4698","webpack:///./src/qsim/auxiliares/operaciones-binarias.js","webpack:///src/components/Registros.vue","webpack:///./src/components/Registros.vue?d383","webpack:///./src/components/Registros.vue","webpack:///./src/components/Memoria.vue?ff82","webpack:///src/components/Memoria.vue","webpack:///./src/components/Memoria.vue?c0c6","webpack:///./src/components/Memoria.vue","webpack:///./src/components/Flags.vue?7ac4","webpack:///src/components/Flags.vue","webpack:///./src/components/Flags.vue?21db","webpack:///./src/components/Flags.vue","webpack:///./src/qsim/auxiliares/regex.js","webpack:///./src/qsim/auxiliares/funciones-para-extraer-info.js","webpack:///./src/qsim/mkInstruccion.js","webpack:///./src/qsim/Estados.js","webpack:///./src/qsim/instrucciones-cpu.js","webpack:///./src/qsim/qsim.js","webpack:///src/App.vue","webpack:///./src/App.vue?8f16","webpack:///./src/App.vue","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Appvue_type_template_id_a23016ac_render","_vm","this","_h","$createElement","_c","_self","_v","staticClass","attrs","id","on","click","run","nuevoPrograma","directives","rawName","expression","rows","domProps","keyup","$event","_k","keyCode","ctrlKey","input","target","composing","codigo","registros","estados","celdas","memoria","flags","_l","inst","_s","etiqueta","instruccionStr","staticRenderFns","Registrosvue_type_template_id_327d8c8b_render","_m","v","k","_f","staticStyle","float","Registrosvue_type_template_id_327d8c8b_staticRenderFns","operacionBinaria","_ref","_ref2","fnSalida","fnCarry","x","y","_ref3","toArray","cadena1","_ref4","cadena2","carry","resultado","pop","unshift","join","suma","xs","ys","bitMasSignificativo","charAt","representarBSS","num","longitudCadena","arguments","undefined","toString","padStart","interpretarBSS","parseInt","interpretarCA2","ca2","cadena","bitInvertidos","not","_ref9","_ref10","map","Registrosvue_type_script_lang_js","props","filters","hexa","toUpperCase","bin","ca2Decimal","components_Registrosvue_type_script_lang_js","component","componentNormalizer","Registros","Memoriavue_type_template_id_5d6b8e93_render","Memoriavue_type_template_id_5d6b8e93_staticRenderFns","Memoriavue_type_script_lang_js","components_Memoriavue_type_script_lang_js","Memoria_component","Memoria","Flagsvue_type_template_id_4b4132f3_render","Flagsvue_type_template_id_4b4132f3_staticRenderFns","Flagsvue_type_script_lang_js","components_Flagsvue_type_script_lang_js","Flags_component","Flags","regEx","modo","registro","inmediato","directo","indirecto","indirectoRegistro","instruccion","conEtiqueta","operacion","destino","origen","comentario","parentesisExternos","buscarSubStr","re","exec","trim","funciones_para_extraer_info_etiquetaDe","funciones_para_extraer_info_operacionDe","funciones_para_extraer_info_destinoDe","funciones_para_extraer_info_origenDe","funciones_para_extraer_info_sinEtiqueta","replace","tieneEtiqueta","test","etiquetaEs","traducirEtiquetaADireccion","programa","index","findIndex","modoDireccionamiento","operando","buscar","ubicacion","valor","buscarIndirecto","alert","puntero","sacarParentesisExternos","celdaApuntada","direccion","numToHexaString","str","mkInstruccion","instruccionRaw","operandoDestino","operandoOrigen","errores","buscarErrores","idOperacionesBinarias","idSaltos","operacionesValidas","concat","esOperacionInvalida","includes","esOperacionBinaria","mkInstruccion_esSalto","estaFueraDeRango","valorOperando","errorConOperando","msg","filter","hayErrores","esUnSalto","Estados_Estados","Estados","classCallCheck","R0","R1","R2","R3","R4","R5","R6","R7","pc","sp","pila","z","historialPila","limiteHistorialPila","historialEjecucion","codigoRaw","split","signo","Math","floor","positivo","negativo","console","log","ejecutarOperacion","evaluarCondicionDeSalto","tipoSalto","ejecutarSalto","cambiarPc","incrementarPc","apilarPc","desapilarPc","ejecutarPrograma","cargarPrograma","hayMasInstrucciones","proximaInstruccion","qsim_buscarErrores","emitirMensajeDeError","ejecutarInstruccion","laPilaSeFueALaMierda","existeEtiqueta","agregarInstruccionAHistorialEjecucion","esSalto","cmpResultado","actualizarFlags","agregarPcAlHistorialPila","almacenar","codigoEjemplo","Appvue_type_script_lang_js","vue_runtime_esm","extend","methods","components","src_Appvue_type_script_lang_js","App_component","App","config","productionTip","render","h","$mount"],"mappings":"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","file":"js/app.4fdac763.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h1',[_vm._v(\"QSim JS\")]),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-sm-7\",attrs:{\"id\":\"codigo\"}},[_c('div',{staticClass:\"form-group\"},[_c('button',{staticClass:\"btn btn-info\",on:{\"click\":_vm.run}},[_vm._v(\"Ejecutar\")]),_c('button',{staticClass:\"btn btn-info\",on:{\"click\":_vm.nuevoPrograma}},[_vm._v(\"Nuevo programa\")])]),_c('div',{staticClass:\"form-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.codigo),expression:\"codigo\"}],staticClass:\"form-control\",attrs:{\"id\":\"codigo-text\",\"rows\":\"30\"},domProps:{\"value\":(_vm.codigo)},on:{\"keyup\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }if(!$event.ctrlKey){ return null; }return _vm.run($event)},\"input\":function($event){if($event.target.composing){ return; }_vm.codigo=$event.target.value}}})])]),_c('div',{staticClass:\"col-sm-5\",attrs:{\"id\":\"estados\"}},[_c('Registros',{attrs:{\"registros\":_vm.estados.registros}}),_c('Memoria',{attrs:{\"celdas\":_vm.estados.memoria}}),_c('Flags',{attrs:{\"flags\":_vm.estados.flags}})],1)]),_c('div',[_c('h4',[_vm._v(\"Historial de intrucciones:\")]),_c('table',_vm._l((_vm.historialEjecucion),function(inst){return _c('tr',[_c('td',[_vm._v(_vm._s(inst.etiqueta ? inst.etiqueta + ':' : ''))]),_c('td',[_vm._v(_vm._s(inst.instruccionStr))])])}))])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"registros\"}},[_c('h4',[_vm._v(\"Registros:\")]),_c('table',[_vm._m(0),_vm._l((_vm.registros),function(v,k){return _c('tr',{key:k},[_c('td',[_c('strong',{staticClass:\"text-primary\"},[_vm._v(_vm._s(k)+\":\")])]),_c('td',[_vm._v(\"\\n                \"+_vm._s(_vm._f(\"hexa\")(v))+\"    \\n            \")]),_c('td',[_c('i',{staticClass:\"text-info text-monospace\",staticStyle:{\"float\":\"right\"}},[_vm._v(\" \"+_vm._s(v)+\" \")])]),_c('td',[_c('i',{staticClass:\"text-info text-monospace\",staticStyle:{\"float\":\"right\"}},[_vm._v(\" \"+_vm._s(_vm._f(\"ca2Decimal\")(v))+\" \")])]),_c('td',[_c('i',{staticClass:\"text-info text-monospace\",staticStyle:{\"float\":\"right\"}},[_vm._v(\" \"+_vm._s(_vm._f(\"bin\")(v))+\" \")])])])})],2)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[_c('th'),_c('th',[_vm._v(\"hexa\")]),_c('th',[_vm._v(\"naturales\")]),_c('th',[_vm._v(\"enteros\")]),_c('th',[_vm._v(\"binario\")])])}]\n\nexport { render, staticRenderFns }","/****************************************\r\n  OPERACIONES BINARIAS (BSS y CA2)\r\n*****************************************/\r\n\r\n// sumador :: (String, String) -> { String, Number }\r\n// PROP: recibe dos Strings de bits y opera sobre ellas utilizando las funciones recibidas\r\n//       si una cadena es mas larga que la otra, los bits extra no se tienen en cuenta\r\nfunction operacionBinaria([...cadena1], [...cadena2], fnSalida, fnCarry) {\r\n\tlet x, y           // 1 bit\r\n\tlet carry     = 0  // carry - borrow\r\n\tlet resultado = [] // salida\r\n\r\n\twhile (cadena1.length > 0 && cadena2.length > 0) {\r\n\t\tx = cadena1.pop()\r\n\t\ty = cadena2.pop()\r\n\r\n\t\tresultado.unshift(fnSalida(x, y, carry))\r\n\r\n\t\tcarry = fnCarry(x, y, carry)\r\n\t}\r\n\r\n\t// return { resultado: resultado.join(''), carry }\r\n\treturn { resultado: resultado.join(''), carry }\r\n}\r\n\r\n// sumaBinaria :: (String, String) -> { String, Number }\r\nfunction suma(xs, ys) {\r\n\treturn operacionBinaria(\r\n\t\txs, ys,\r\n\t\t(x,y,c) => x ^ y ^ c,\r\n\t\t(x,y,c) => (x & y) | (x ^ y) & c\r\n\t)\r\n}\r\n\r\n// restaBinaria :: (String, String) -> { String, Number }\r\nfunction resta(xs, ys) {\r\n\treturn operacionBinaria(\r\n\t\txs, ys,\r\n\t\t(x,y,c) => (x ^ y) ^ c,\r\n\t\t(x,y,c) => (~x & y) | (~(x ^ y) & c)\r\n\t)\r\n}\r\n\r\n\r\n// bitMasSignificativo :: String -> Number\r\nfunction bitMasSignificativo(xs) {\r\n\treturn xs.charAt(0)\r\n}\r\n\r\n//multiplicacion :: (String, String) -> { String }\r\nfunction multiplicacion([...xs], [...ys]) {\r\n\tlet x\r\n\tconst cadenasAux = []\r\n\r\n\twhile (xs.length > 0) {\r\n\t\tx = xs.pop()\r\n\t\tcadenasAux.push(ys.map(y => y & x))\r\n\t\tys.push('0')\r\n\t}\r\n\r\n\r\n\tconst resultado = cadenasAux.map(cadena => cadena.join(''))\r\n\t\t                        .reduce((cadena1, cadena2) => suma(cadena1, cadena2).resultado)\r\n\r\n\treturn\t{ resultado }\r\n}\r\n\r\nfunction division(dividendo, divisor) {\r\n\tlet cociente = 0\r\n\tlet resto    = dividendo\r\n\t\r\n\twhile (interpretarBSS(resto) >= interpretarBSS(divisor)) {\r\n\t\tcociente += 1\r\n\t\tresto     = resta(resto, divisor).resultado\r\n\t}\r\n\r\n\treturn { resultado: representarBSS(cociente, dividendo.length), resto }\r\n}\r\n\r\n// representarBSS :: (Number, Number) -> String\r\nfunction representarBSS(num, longitudCadena=16) {\r\n\treturn num.toString(2)\r\n\t          .padStart(longitudCadena, '0')\r\n}\r\n\r\n// interpretarBSS :: String -> Number\r\nfunction interpretarBSS(xs) {\r\n\treturn parseInt(xs, 2)\r\n}\r\n\r\n// interpretarCA2 :: String -> Number\r\nfunction interpretarCA2(xs) {\r\n\treturn bitMasSignificativo(xs) === '0' ?\r\n\t            interpretarBSS(xs) :\r\n\t       -1 * interpretarBSS(ca2(xs))\r\n}\r\n\r\n// ca2 :: (String) -> String\r\nfunction ca2(cadena) {\r\n\tconst  bitInvertidos = not(cadena)\r\n\treturn suma(bitInvertidos, '1'.padStart(bitInvertidos.length, '0')).resultado\r\n}\r\n\r\n// not :: (String) -> String\r\nfunction not([...cadena]) {\r\n\treturn cadena.map(x => x === '0' ? '1' : '0')\r\n\t             .join('')\r\n}\r\n\r\nfunction and(cadena1, cadena2) {\r\n\tconsole.log(\"AND\",cadena1, cadena2)\r\n\tconst longitudCadenaResultado = Math.max(cadena1.length, cadena2.length)\r\n\treturn { resultado: (parseInt(cadena1, 2) & parseInt(cadena2, 2)).toString(2).padStart(longitudCadenaResultado, '0') }\r\n}\r\n\r\nfunction or(cadena1, cadena2) {\r\n\tconst longitudCadenaResultado = Math.max(cadena1.length, cadena2.length)\r\n\treturn { resultado: (parseInt(cadena1, 2) | parseInt(cadena2, 2)).toString(2).padStart(longitudCadenaResultado, '0') }\r\n}\r\n\r\n\r\nexport {\r\n\tsuma,\r\n\tresta,\r\n\tnot,\r\n\tand,\r\n\tor,\r\n\tbitMasSignificativo,\r\n\tmultiplicacion,\r\n\tdivision,\r\n\trepresentarBSS,\r\n\tinterpretarBSS,\r\n\tinterpretarCA2,\r\n\tca2\r\n}","<template>\n    <div id=\"registros\">\n\n        <h4>Registros:</h4>\n\n        <table>\n            <tr>\n                <th></th>\n                <th>hexa</th>\n                <th>naturales</th>\n                <th>enteros</th>\n                <th>binario</th>\n            </tr>\n            <tr v-for=\"(v,k) in registros\" :key=\"k\">\n                <td>\n                    <strong class=\"text-primary\">{{ k }}:</strong>\n                </td>\n                <td>\n                    {{ v | hexa }}    \n                </td>\n                <td>\n                    <i class=\"text-info text-monospace\" style=\"float:right;\"> {{v}} </i>\n                </td>\n                <td>\n                    <i class=\"text-info text-monospace\" style=\"float:right;\"> {{v | ca2Decimal}} </i>\n                </td>\n                <td>\n                    <i class=\"text-info text-monospace\" style=\"float:right;\"> {{v | bin}} </i>\n                </td>\n            </tr>\n        </table>\n\n    </div>\n</template>\n\n<script>\nimport { representarBSS, interpretarCA2 } from '../qsim/auxiliares/operaciones-binarias.js'\n\nexport default {\n    name: 'Registros',\n    props: ['registros'],\n    filters: {\n        hexa(num)       { return '0x' + (num).toString(16).padStart( 4, \"0\").toUpperCase() },\n        bin(num)        { return  representarBSS(num) },\n        ca2Decimal(num) { return  interpretarCA2((representarBSS(num))) }\n    }\n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Registros.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Registros.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Registros.vue?vue&type=template&id=327d8c8b\"\nimport script from \"./Registros.vue?vue&type=script&lang=js\"\nexport * from \"./Registros.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"memoria\"}},[_c('h4',[_vm._v(\"Memoria:\")]),_c('table',[_vm._m(0),_vm._l((_vm.celdas),function(v,k){return _c('tr',{key:k},[_c('td',[_c('strong',{staticClass:\"text-primary\"},[_vm._v(_vm._s(k)+\":\")])]),_c('td',[_vm._v(\"\\n                \"+_vm._s(_vm._f(\"hexa\")(v))+\"\\n            \")]),_c('td',[_c('i',{staticClass:\"text-info text-monospace\",staticStyle:{\"float\":\"right\"}},[_vm._v(_vm._s(v))])]),_c('td',[_c('i',{staticClass:\"text-info text-monospace\",staticStyle:{\"float\":\"right\"}},[_vm._v(_vm._s(_vm._f(\"ca2Decimal\")(v)))])]),_c('td',[_c('i',{staticClass:\"text-info text-monospace\",staticStyle:{\"float\":\"right\"}},[_vm._v(_vm._s(_vm._f(\"bin\")(v)))])])])})],2)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[_c('th'),_c('th',[_vm._v(\"hexa\")]),_c('th',[_vm._v(\"naturales\")]),_c('th',[_vm._v(\"enteros\")]),_c('th',[_vm._v(\"binario\")])])}]\n\nexport { render, staticRenderFns }","<template>\n    <div id=\"memoria\">\n\n        <h4>Memoria:</h4>\n\n        <table>\n            <tr>\n                <th></th>\n                <th>hexa</th>\n                <th>naturales</th>\n                <th>enteros</th>\n                <th>binario</th>\n            </tr>\n            <tr v-for=\"(v,k) in celdas\" :key=\"k\">\n                <td>\n                    <strong class=\"text-primary\">{{ k }}:</strong>\n                </td>\n                <td>\n                    {{ v | hexa }}\n                </td>\n                <td>\n                     <i class=\"text-info text-monospace\" style=\"float:right;\">{{v}}</i>\n                </td>\n                <td>\n                     <i class=\"text-info text-monospace\" style=\"float:right;\">{{v | ca2Decimal}}</i>\n                </td>\n                <td>\n                     <i class=\"text-info text-monospace\" style=\"float:right;\">{{v | bin}}</i>\n                </td>\n            </tr>\n        </table>\n\n    </div>\n</template>\n\n<script>\nimport { representarBSS, interpretarCA2 } from '../qsim/auxiliares/operaciones-binarias.js'\n\nexport default {\n    name: 'Memoria',\n    props: ['celdas'],\n    filters: {\n        hexa(num)       { return '0x' + (num).toString(16).padStart( 4, \"0\").toUpperCase() },\n        bin(num)        { return  representarBSS(num) },\n        ca2Decimal(num) { return  interpretarCA2((representarBSS(num))) }\n    }\n}\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Memoria.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Memoria.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Memoria.vue?vue&type=template&id=5d6b8e93\"\nimport script from \"./Memoria.vue?vue&type=script&lang=js\"\nexport * from \"./Memoria.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"flags\"}},[_c('h4',[_vm._v(\"Flags:\")]),_c('table',_vm._l((_vm.flags),function(v,k){return _c('tr',{key:k},[_c('td',[_c('strong',{staticClass:\"text-primary\"},[_vm._v(_vm._s(k)+\":\")])]),_c('td',[_c('i',{staticClass:\"text-info text-monospace\",staticStyle:{\"float\":\"right\"}},[_vm._v(_vm._s(v ? 1 : 0)+\" \")])])])}))])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div id=\"flags\">\n\n    \t<h4>Flags:</h4>\n\n        <table>\n            <tr v-for=\"(v,k) in flags\" :key=\"k\">\n                <td>\n                    <strong class=\"text-primary\">{{ k }}:</strong>\n                </td>\n                \n                <td>\n                     <i class=\"text-info text-monospace\" style=\"float:right;\">{{v ? 1 : 0}} </i>\n                </td>\n            </tr>\n        </table>\n\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'Flags',\n    props: ['flags']\n}\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Flags.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Flags.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Flags.vue?vue&type=template&id=4b4132f3\"\nimport script from \"./Flags.vue?vue&type=script&lang=js\"\nexport * from \"./Flags.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/*****************************************************\r\n  EXPRESIONES REGULARES\r\n******************************************************/\r\nconst regEx = {\r\n\tmodo: {\r\n\t\tregistro:          /^R[0-7]$/i,\r\n\t\tinmediato:         /^0x[A-F|0-9]{4}$/i,\r\n\t\tdirecto:           /^\\[0x[A-F|0-9]{4}\\]$/i,\r\n\t\tindirecto:         /^\\[\\[0x[A-F|0-9]{4}\\]\\]$/i,\r\n\t\tindirectoRegistro: /^\\[R[0-7]\\]$/i\r\n\t},\r\n\tinstruccion: {\r\n\t\tconEtiqueta: /^\\w+:\\s+/i,\r\n\t\tetiqueta:    /^(.*):/i,\r\n\t\toperacion:   /^(?:.*:\\s*)?(\\w{0,4})/i,\r\n\t\t//operacion:   /^(?:.*:\\s*)?(\\w*)\\s/i, // <-- OJO QUE CON ESTO SE CAGA \"RET\"\r\n\t\tdestino:     /\\w+\\s+(\\[{0,2}\\w+\\]{0,2})\\s*,\\s*.*$/i,\r\n\t\torigen:      /\\s+(\\[{0,2}\\w+\\]{0,2})$/i\r\n\t},\r\n\tcomentario: /#.*/,\r\n\tparentesisExternos: /\\[(.*)\\]/\r\n}\r\n\r\nexport { regEx }","import { regEx } from './regex.js'\r\n\r\n/***********************************************\r\n  Funciones para extraer info en base a Strings \r\n************************************************/\r\n// buscarSubStr :: (String, RegEx) -> String | null\r\n// PROP: retorna la sub-cadena que se ajute a la expresion regular o null si no encontró nada\r\nfunction buscarSubStr(cadena, re) {\r\n\tconst  result = re.exec(cadena.trim())\r\n\treturn result ? result[1] : null\r\n}\r\n\r\n// etiquetaDe, operacionDe, destinoDe, origenDe,sinEtiqueta :: String -> String\r\nconst etiquetaDe  = (instruccion) => buscarSubStr(instruccion, regEx.instruccion.etiqueta)\r\nconst operacionDe = (instruccion) => buscarSubStr(instruccion, regEx.instruccion.operacion)\r\nconst destinoDe   = (instruccion) => buscarSubStr(instruccion, regEx.instruccion.destino)\r\nconst origenDe    = (instruccion) => buscarSubStr(instruccion, regEx.instruccion.origen)\r\nconst sinEtiqueta = (instruccion) => instruccion.replace(regEx.instruccion.etiqueta, '').trim()\r\n\r\n// tieneEtiqueta :: String -> Bool\r\n// PROP: indica si la instruccion está etiquetada\r\nfunction tieneEtiqueta(instruccion) {\r\n\treturn regEx.instruccion.conEtiqueta.test(instruccion)\r\n}\r\n\r\n// etiquetaEs :: (String, String) -> Bool\r\n// PROP: indica si la etiqueta de la instruccion es la que se paso como argumento\r\n// PREC: tieneEtiqueta(instruccion)\r\nfunction etiquetaEs(instruccion, etiqueta) {\r\n\treturn etiquetaDe(instruccion) == etiqueta\r\n}\r\n\r\n// traducirEtiquetaADireccion :: ([String], String) -> Numero\r\n// PROP: retorna el numero de linea, dentro del codigo, en que se encuentra la etiqueta (contando desde 0)\r\n// PREC: alguna linea tiene dicha etiqueta\r\nfunction traducirEtiquetaADireccion(programa, etiqueta) {\r\n\tconst index = programa.findIndex(instruccion => tieneEtiqueta(instruccion) && etiquetaEs(instruccion, etiqueta))\r\n\t//if (index == -1) throw `NO EXISTE LA ETIQUETA \"${etiqueta}\". ¡¡¡SE FUE TODO A LA MIERDA!!! ¡¡¡VAMOS A MORIR!!!`\r\n\treturn index\r\n}\r\n\r\n// modoDireccionamiento :: (String) -> String\r\n// PROP: recibe un String con el operando que figura en la instruccion e indica su modo de direccionamiento\r\nfunction modoDireccionamiento(operando) {\r\n\treturn  regEx.modo.registro.test(operando)          ? 'registro'          :\r\n\t\t\tregEx.modo.directo.test(operando)           ? 'directo'           :\r\n\t\t\tregEx.modo.inmediato.test(operando)         ? 'inmediato'         :\r\n\t\t\tregEx.modo.indirecto.test(operando)         ? 'indirecto'         :\r\n\t\t\tregEx.modo.indirectoRegistro.test(operando) ? 'indirectoRegistro' :\r\n\t\t\tnull\r\n}\r\n\r\n// buscar :: (Estados, String) -> Operando | String\r\n// PROP: retorna un objeto con datos del operando o un String si es una etiqueta\r\nfunction buscar(estados, operando) {\r\n\t\r\n\tswitch (modoDireccionamiento(operando)) {\r\n\t\tcase 'registro'          : return { ubicacion: 'registros',   id: operando, valor: estados.registros[operando] }\r\n\t\tcase 'directo'           : return { ubicacion: 'memoria'  ,   id: operando, valor: estados.memoria[operando]   }\r\n\t\tcase 'inmediato'         : return { ubicacion: 'instruccion', id: operando, valor: parseInt(operando)          }\r\n\t\tcase 'indirecto'         : return buscarIndirecto(estados, operando, 'memoria')\r\n\t\tcase 'indirectoRegistro' : return buscarIndirecto(estados, operando, 'registros')\r\n\t\tdefault: return operando // etiqueta (String)\r\n\t}\r\n\r\n\talert(\"Se fue todo a la MIERDA con los OPERANDOS!!!!\")\r\n\tthrow \"Se fue todo a la MIERDA con los OPERANDOS!!!!\"\r\n}\r\n\r\nfunction buscarIndirecto(estados, id, ubicacion) {\r\n\tconst puntero       = sacarParentesisExternos(id)\r\n\tconst celdaApuntada = estados[ubicacion][puntero]\r\n\tconst direccion     = `[${numToHexaString(celdaApuntada)}]`\r\n\r\n\treturn buscar(estados, direccion)\r\n}\r\n\r\n// sacarParentesisExternos :: String -> String\r\nfunction sacarParentesisExternos(str) {\r\n\treturn (str.replace(regEx.parentesisExternos, '$1'))\r\n}\r\n\r\n// numToHexaString :: (Int, Int) -> String\r\nfunction numToHexaString(num, longitudCadena=4) {\r\n\treturn '0X' + num.toString(16)\r\n\t                 .toUpperCase()\r\n\t                 .padStart(longitudCadena, '0') // la X tiene que estar en mayuscula\r\n}\r\n\r\nexport {\r\n\tbuscarSubStr,\r\n\toperacionDe,\r\n\tdestinoDe,\r\n\torigenDe,\r\n\tsinEtiqueta,\r\n\ttieneEtiqueta,\r\n\tetiquetaDe,\r\n\r\n\ttraducirEtiquetaADireccion,\r\n\tmodoDireccionamiento,\r\n\tbuscar,\r\n\r\n\tsacarParentesisExternos,\r\n\tnumToHexaString\r\n}\r\n","import { regEx } from './auxiliares/regex.js'\r\n\r\nimport { etiquetaDe,\r\n\t     sinEtiqueta,\r\n         operacionDe,\r\n         destinoDe,\r\n         origenDe,\r\n         buscar      } from './auxiliares/funciones-para-extraer-info.js'\r\n\r\n/**********************************\r\n\tARMADO DEL OBJETO \"INTRUCCION\"\r\n***********************************/\r\n\r\nfunction mkInstruccion(estados, instruccionRaw) {\r\n\tconst inst = {\r\n\t\tinstruccionRaw : instruccionRaw,\r\n\t\tetiqueta       : etiquetaDe(instruccionRaw),\r\n\t\tinstruccionStr : sinEtiqueta(instruccionRaw).toUpperCase(),\r\n\r\n\t\toperacion      : operacionDe(instruccionRaw),\r\n\t\tdestino        : destinoDe(instruccionRaw),\r\n\t\torigen         : origenDe(instruccionRaw)\r\n\t}\r\n\r\n\tinst.operandoDestino = buscar(estados, inst.destino) // busca el operando destino (su valor)\r\n\tinst.operandoOrigen  = buscar(estados, inst.origen)  // busca el operando origen (su valor)\r\n\r\n\tif (inst.operacion == 'NOT') { \r\n\t\tinst.operandoDestino = inst.operandoOrigen // MOCO. se arregla modificando regEx. Funciona pero es feo\r\n\t\tinst.operandoOrigen  = null\r\n\t}\r\n\r\n\tinst.errores = buscarErrores(inst)\r\n\r\n\treturn inst\r\n}\r\n\r\n\r\n\r\n/******************************\r\n\tBUSQUEDA DE ERRORES\r\n*******************************/\r\n\r\nconst idOperacionesBinarias = ['MUL', 'MOV', 'ADD', 'SUB', 'DIV', 'AND', 'OR' ]\r\nconst idSaltos              = ['CALL', 'RET', 'JMP', 'JE', 'JNE', 'JLE', 'JG', 'JL', 'JGE', 'JLEU', 'JGU', 'JCS', 'JNEG', 'JVS']\r\n\r\nconst operacionesValidas = [...idOperacionesBinarias, ...idSaltos, 'CMP', 'NOT']\r\n\r\nconst esOperacionInvalida = (operacion)     => !operacionesValidas.includes(operacion)\r\nconst esOperacionBinaria  = (operacion)     => idOperacionesBinarias.includes(operacion)\r\nconst esSalto             = (operacion)     => idSaltos.includes(operacion)\r\n\r\nconst estaFueraDeRango    = (valorOperando) => valorOperando < 0x0000 || valorOperando > 0xFFFF\r\nconst errorConOperando    = (valorOperando) => valorOperando == null           ? { msg: 'Falta operando' } :\r\n\t                                           estaFueraDeRango(valorOperando) ? { msg: `${valorOperando} fuera de rango. Debe ser una numero entre 0x0000 y 0xFFFF` } :\r\n\t                                           null\r\n\r\nfunction buscarErrores(instruccion) {\r\n\tconst { operacion, destino, origen, operandoDestino, operandoOrigen } = instruccion\r\n\r\n\tlet errores = (\r\n\t\t\tesOperacionInvalida(operacion) ? [{ msg: `${operacion} no es una operacion valida.\\nSe esperaba alguna de las siguientes:\\n${operacionesValidas.join(', ')}` }] :\r\n\t\t\tesOperacionBinaria(operacion)  ? [errorConOperando(operandoDestino), errorConOperando(operandoOrigen)] :\r\n\t\t\toperacion === 'NOT'            ? [errorConOperando(operandoDestino)] :\r\n\t\t\tesSalto(operacion)             ? [] :// agregar errores con saltos\r\n\t\t\t[] // no hay errores\r\n\t).filter(x => x != null)\r\n\r\n\treturn errores\r\n}\r\n\r\nconst hayErrores = (instruccion) => instruccion.errores.length > 0\r\nconst esUnSalto  = (instruccion) => instruccion.operacion != 'RET' && idSaltos.includes(instruccion.operacion)\r\n\r\nexport { mkInstruccion, hayErrores, esUnSalto }","import { regEx                      } from './auxiliares/regex.js'\r\nimport { traducirEtiquetaADireccion } from './auxiliares/funciones-para-extraer-info.js'\r\nimport { mkInstruccion              } from './mkInstruccion.js'\r\n\r\nclass Estados {\r\n\tconstructor() {\r\n\t\tthis.programa  = []      // [String] lista de instrucciones\r\n\t\tthis.memoria   = {}\r\n\t\tthis.registros = { R0: 0, R1: 0, R2: 0, R3: 0,\tR4: 0, R5: 0, R6: 0, R7: 0 }\r\n\r\n\t\tthis.pc        = 0       // se va a usar como indice para recorrer la lista de instrucciones (this.programa)\r\n\t\tthis.sp        = 0xFFEF  // por ahora no se usa\r\n\t\tthis.pila      = []\r\n\t\t\r\n\t\tthis.flags     = { z: false, n: false, c: false, v: false }\r\n\r\n\t\tthis.historialPila       = []  // cada vez que se ejecute un CALL, RET o un salto se apila el pc\r\n\t\tthis.limiteHistorialPila = 100 // establece el tamaño maximo que puede tener \"historialPila\"\r\n\t\t                               // para evitar bucles infinitos. se puede modificar si hace falta\r\n\r\n\t\tthis.historialEjecucion = []  // [String] a medida que se ejecutan las instrucciones se almacena un String con la instruccion\r\n\t}\r\n\r\n\talmacenar(destino, valor)  { this[destino.ubicacion][destino.id] = valor\t} // ubicacion -> registros o memoria\r\n\t                                                                              // id        -> nro registro o nro celda\r\n\tincrementarPc()            { this.pc++               }\r\n\tapilarPc()                 { this.pila.push(this.pc) }\r\n\tdesapilarPc()              { return this.pila.pop()  } // recordar que pop es destructivo por lo tanto ya se le saca el elemento del tope\r\n\tcambiarPc(etiqueta)        { this.pc = traducirEtiquetaADireccion(this.programa, etiqueta) }\r\n\r\n\thayMasInstrucciones()      { return this.pc < this.programa.length              }\r\n\tproximaInstruccion()       { return mkInstruccion(this, this.programa[this.pc]) }\r\n\r\n\tagregarPcAlHistorialPila() { this.historialPila.push(this.pc)                            }\r\n\tlaPilaSeFueALaMierda()     { return this.historialPila.length > this.limiteHistorialPila }\r\n\r\n\t// agregarInstruccionAHistorialEjecucion :: (Instruccion)\r\n\tagregarInstruccionAHistorialEjecucion(instruccion) { this.historialEjecucion.push(instruccion) }\r\n\r\n\t// cargarPrograma :: (String)\r\n\tcargarPrograma(codigoRaw) {\r\n\t\tthis.programa = codigoRaw.split('\\n')                                 // separa en lineas\r\n\t\t\t\t\t\t\t     .map(x => x.trim()\r\n\t\t\t\t\t\t\t                .replace(regEx.comentario, '')\r\n\t\t\t\t\t\t\t                .replace(',', ', ')               // agrego un espacio despues de la coma por las dudas. a veces se me olvida\r\n\t\t\t\t\t\t\t                .toUpperCase())                   // saca los comentarios y los espacios en los extremos\r\n\t\t\t\t\t\t\t\t .filter(x => x != '')                        // saca los renglones vacios\r\n\t}\r\n\r\n\t// actualizarFlags :: (Number, Number, Number)\r\n\tactualizarFlags(x, y, resultado) {\r\n\t\tconst valor    = num => num & 0xFFFF\r\n\t\tconst signo    = num => Math.floor((num & 0x8000) / 0x8000)\r\n\t\tconst positivo = num => signo(num) == 0\r\n\t\tconst negativo = num => signo(num) == 1\r\n\r\n\t\tthis.flags = {\r\n\t\t\tz: valor(resultado) == 0,\r\n\t\t\tn: signo(resultado) == 1,\r\n\t\t\tc: (x - y) > 0xFFFF || (x - y) < 0, // ojo usar (x - y) en lugar de \"resultado\". \"resultado\" ya esta filtrado con '0xFFFF'\r\n\t\t\tv: (negativo(x) && positivo(y) && positivo(resultado)) ||\r\n\t\t\t   (positivo(x) && negativo(y) && negativo(resultado))\r\n\t\t}\r\n\t\tconsole.log('resultado', (x - y))\r\n\t\tconsole.log(\"FLAGS: \",this.flags.z, this.flags.n, this.flags.c, this.flags.v)\r\n\t}\r\n\r\n\t// noExisteEtiqueta :: (String) -> boolean\r\n\texisteEtiqueta(etiqueta) {\r\n\t\treturn traducirEtiquetaADireccion(this.programa, etiqueta) >= 0\r\n\t}\r\n\r\n\t// toString :: () -> String\r\n\ttoString() {\r\n\t\treturn `\r\n\t\t\t${this.programa}\r\n\t\t\t${this.registros}\r\n\t\t\t${this.memoria}\r\n\t\t`\r\n\t}\r\n}\r\n\r\nexport { Estados }","/*****************\r\n \tOPERACIONES\r\n******************/\r\n\r\n// ejecutarOperacion :: (String, Number, Number) -> { Number }\r\nfunction ejecutarOperacion(operacion, x, y) { // \r\n\t\r\n\tlet resultado\r\n\r\n\tswitch (operacion) {\r\n\t\tcase 'MUL': resultado = (x * y)           ; break;\r\n\t\tcase 'MOV': resultado = y                 ; break;\r\n\t\tcase 'ADD': resultado = (x + y)           ; break;\r\n\t\tcase 'SUB': resultado = (x - y)           ; break;\r\n\t\tcase 'CMP': resultado = (x - y)           ; break;\r\n\t\tcase 'DIV': resultado = Math.floor(x / y) ; break;\r\n\t\tcase 'AND': resultado = x & y             ; break;\r\n\t\tcase 'OR' : resultado = x | y             ; break;\r\n\t\tcase 'NOT': resultado = (~x)              ; break;\r\n\t}\r\n\r\n\treturn ({ resultado: resultado & 0xFFFF })\r\n}\r\n\r\n\r\n/*********************\r\n  SALTOS\r\n**********************/\r\n// evaluarCondicionDeSalto :: (String, Instruccion) -> boolean\r\nfunction evaluarCondicionDeSalto(tipoSalto, { z, n, c, v }) {\r\n\tswitch (tipoSalto) {\r\n\t\tcase 'JE'  : return   z\r\n\t\tcase 'JNE' : return  !z\r\n\t\tcase 'JLE' : return   z || (n ^ v)\r\n\t\tcase 'JG'  : return !(z || (n ^ v))\r\n\t\tcase 'JL'  : return   n ^ v\r\n\t\tcase 'JGE' : return !(n ^ v)\r\n\t\tcase 'JLEU': return   c || z\r\n\t\tcase 'JGU' : return  !c || z // esto en el pdf estaba mal, figuraba como \"not (c or z)\"\r\n\t\tcase 'JCS' : return   c\r\n\t\tcase 'JNEG': return   n\r\n\t\tcase 'JVS' : return   v\r\n\t}\r\n}\r\n\r\n// ejecutarSalto :: (Estados, String, String)\r\nfunction ejecutarSalto(estados, tipoSalto, etiqueta) {\r\n\tswitch (tipoSalto) {\r\n\t\tcase 'JMP': \r\n\t\t\testados.cambiarPc(etiqueta)\r\n\t\t\tbreak\r\n\t\tcase 'CALL':\r\n\t\t\testados.incrementarPc()\r\n\t\t\testados.apilarPc()\r\n\t\t\testados.cambiarPc(etiqueta)\r\n\t\t\tbreak\r\n\t\tcase 'RET':\r\n\t\t\testados.pc = estados.desapilarPc()\r\n\t\t\tbreak\r\n\t\tdefault: // Saltos condicionales\r\n\t\t\tif (evaluarCondicionDeSalto(tipoSalto, estados.flags)) {\r\n\t\t\t\testados.cambiarPc(etiqueta)\r\n\t\t\t} else {\r\n\t\t\t\testados.incrementarPc()\r\n\t\t\t}\r\n\t}\r\n}\r\n\r\nexport { ejecutarOperacion, ejecutarSalto }\r\n","import { hayErrores, esUnSalto            } from './mkInstruccion.js'\nimport { ejecutarOperacion, ejecutarSalto } from './instrucciones-cpu.js'\nimport { Estados                          } from './Estados.js'\n\n// ejecutarPrograma :: (String)\nfunction ejecutarPrograma(codigoRaw) {\n\tconst estados = new Estados()\n\testados.cargarPrograma(codigoRaw) // carga el programa en memoria\n\n\twhile (estados.hayMasInstrucciones()) {\n\t\tconst instruccion = estados.proximaInstruccion()\n\n\t\tconst errores = buscarErrores(estados, instruccion)\n\n\t\tif (errores) {\n\t\t\temitirMensajeDeError(errores)\n\t\t\treturn estados\n\t\t}\n\n\t\tejecutarInstruccion(estados, instruccion)\n\t}\n\n\treturn estados\n}\n\n// buscarErrores :: (Estados, Instruccion) -> String | null\nfunction buscarErrores(estados, instruccion) {\n\n\tif (estados.laPilaSeFueALaMierda()) {\n\t\treturn 'Parece que la pila se fue a la mierda... ¿te mandaste un bucle infinito?'\n\t}\n\n\tif (hayErrores(instruccion)) {\n\t\treturn `ERROR en \"${instruccion.instruccionStr}\"\\n${instruccion.errores.map(x => x.msg).join(\"\\n\")}`\n\t\t\n\t}\n\n\tif (esUnSalto(instruccion) && !estados.existeEtiqueta(instruccion.origen)) {\n\t\treturn `NO EXISTE LA ETIQUETA \"${instruccion.origen}\". ¡¡¡SE FUE TODO A LA MIERDA!!! ¡¡¡VAMOS A MORIR!!!`\n\t}\n\n\treturn null\n}\n\n// emitirMensajeDeError :: (String)\nfunction emitirMensajeDeError(msg) {\n\talert(msg)\n\tconsole.log(\"ERRORRRRRRRRRRRRRR:\", msg)\n}\n\n// ejecutarInstruccion :: (Estados, Instruccion)\nfunction ejecutarInstruccion(estados, instruccion) {\n\tconst { operacion, destino, origen, operandoDestino, operandoOrigen, instruccionRaw } = instruccion\n\testados.agregarInstruccionAHistorialEjecucion(instruccion)\n\t\t\n\tconsole.log(`ejecutarInstruccion -> ${operacion} ${destino} ${origen}`)\n\n\tlet result\n\tlet esSalto = false\n\n\tswitch (operacion) {\n\t\tcase 'MUL':\n\t\tcase 'MOV':\n\t\tcase 'ADD':\n\t\tcase 'SUB':\n\t\tcase 'DIV':\n\t\tcase 'AND':\n\t\tcase 'OR' :\n\t\t\tresult = ejecutarOperacion(operacion,\n\t\t\t                           operandoDestino.valor,\n\t\t\t                           operandoOrigen.valor)\n\n\t\t\t//this.estados.actualizarFlags(x, y, result.resultado)\n\t\t\tconsole.log('Destino:   ', operandoDestino)\n\t\t\tconsole.log('Origen:    ', operandoOrigen)\n\t\t\tconsole.log('Resultado:' , result)\n\t\t\tbreak\n\n\t\tcase 'NOT':\n\t\t\tresult = ejecutarOperacion('NOT', operandoDestino.valor)\n\t\t\tconsole.log('Destino:   ', operandoDestino)\n\t\t\tconsole.log('Resultado:' , result)\n\t\t\tbreak\n\n\t\tcase 'CMP':\n\t\t\tconst x = operandoDestino.valor\n\t\t\tconst y = operandoOrigen.valor\n\t \t\tconst cmpResultado = ejecutarOperacion(operacion, x, y).resultado\n \t\t\testados.actualizarFlags(x, y, cmpResultado) // no guardo el resultado en \"result\" para que no altere \"estados\"\n \t\t\tbreak\n\n\t\tdefault: // CALL, RET, JMP, saltos condicionales\n\t\t\testados.agregarPcAlHistorialPila()        // para controlar que no haya un bucle infinito\n\t\t\tejecutarSalto(estados, operacion, origen) // aca origen es una etiqueta. modifica \"estados\"\n\t\t\tesSalto = true\n\t\t\tconsole.log('Etiqueta:    ', operandoOrigen)\n\t}\n\n\tif (result)   estados.almacenar(operandoDestino, result.resultado)\n\tif (!esSalto) estados.incrementarPc()\n\n\tconsole.log('---------------------------------------------------')\n\t\n\treturn estados\n}\n\nexport { ejecutarPrograma, emitirMensajeDeError, ejecutarInstruccion }","<template>\n    <div>\n        <h1>QSim JS</h1>\n\n        <div class=\"row\">\n            <div id=\"codigo\" class=\"col-sm-7\">\n                <div class=\"form-group\">\n                    <button @click=\"run\" class=\"btn btn-info\">Ejecutar</button>\n                    <button @click=\"nuevoPrograma\" class=\"btn btn-info\">Nuevo programa</button>\n                </div>\n                \n                <div class=\"form-group\">\n                    <textarea id=\"codigo-text\"\n                              class=\"form-control\"\n                              @keyup.ctrl.enter =\"run\"\n                              v-model=\"codigo\"\n                              rows=\"30\">\n                    </textarea>\n                </div>\n\n            </div>\n\n\n            <div id=\"estados\" class=\"col-sm-5\">\n                <Registros :registros =\"estados.registros\" />\n                <Memoria   :celdas    =\"estados.memoria\"   />\n                <Flags     :flags     =\"estados.flags\"     />\n            </div>\n\n        </div>\n        <div>\n            <h4>Historial de intrucciones:</h4>\n\n            <table>\n                <tr v-for=\"inst of historialEjecucion\">\n                    <td>{{ inst.etiqueta ? inst.etiqueta + ':' : '' }}</td>\n                    <td>{{ inst.instruccionStr }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script type=\"text/javascript\">\n\nimport Vue from \"vue\"\n\nimport Registros from \"./components/Registros.vue\"\nimport Memoria   from \"./components/Memoria.vue\"\nimport Flags     from \"./components/Flags.vue\"\n\nimport { Estados          } from \"./qsim/Estados.js\"\nimport { ejecutarPrograma } from \"./qsim/qsim.js\"\n\nconst codigoEjemplo = `# Segundo parcial - 26/06/18 - Tema 1\n# R0 -> PUNTAJE\n# R4 -> POSICION\n\n                 JMP main\n\njugar:           MOV R5, R6          # \n                 AND R5, 0xFF00      # \n                 CMP R5, 0xFF00      # si no es FOWARD\n                 JNE ver_si_es_back  # ver si es BACK\n\n                 MOV R5, R6          # almaceno en R5 la cantidad de\n                 AND R5, 0x00FF      # posiciones a SUMAR en R4\n\n                 ADD R4, R5          # actualizo R4\n\n                 JMP fin\n\nver_si_es_back:  MOV R5, R6          # \n                 AND R5, 0xBB00      # \n                 CMP R5, 0xBB00      # si no es BACK\n                 JNE ver_si_es_bonus # ver si es BONUS\n\n                 MOV R5, R6          # almaceno en R5 la cantidad de\n                 AND R5, 0x00FF      # la cantidad de posiciones a RESTAR en R4\n \n                 SUB R4, R5          # actualizo R4\n\n                 JMP fin\n\nver_si_es_bonus: MOV R5, R6          # si no es\n                 AND R5, 0xFF00      # BONUS\n                 CMP R5, 0x0000      # entonces\n                 JNE fin             # no hace nada\n\n                 ADD R0, R6          # actualizo R0. no hace falta \n                                     # aplicar mascara para BONUS\n\n                 JMP fin\n\nfin:             RET\n\nmain:            MOV [0xA000], 0xFF03 # 3 forward\n                 MOV [0xA001], 0xFF09 # 9 forward\n                 MOV [0xA002], 0x000A # +10 puntos\n                 MOV [0xA003], 0x000B # +11 puntos\n                 MOV [0xA004], 0xBB03 # 3 backward\n                 MOV [0xA005], 0xEE03 # no hace nada\n                 MOV [0xA006], 0x1111 # marca el fin\n\n                 MOV R1, 0xA000   # R1 -> apunta al inicio del arreglo\n\n                 MOV R0, 0x0000   # inicializo el contador de puntos\n                 MOV R4, 0x0000   # inicializo el contador de posiciones\n\nwhile:           CMP [R1], 0x1111 # si el contenido de la celda a la que apunta R1\n                 JE fin           # es 0x1111, termina de procesar el arreglo\n                 \n                 MOV R6, [R1]     # guardo en R6 el elemento actual\n\n                 CALL jugar       # proceso elemento\n\n                 ADD R1, 0x0001   # incremento puntero\n\n                 JMP while\n\nfin:             RET\n`\n\nexport default Vue.extend({\n    data() {\n        return {\n            estados: new Estados(),\n            codigo: codigoEjemplo,\n            historialEjecucion: ''\n        }\n    },\n    methods: {\n        run() {\n            this.estados            = ejecutarPrograma(this.codigo)\n            this.historialEjecucion = this.estados.historialEjecucion\n        },\n        nuevoPrograma() {\n            this.estados              = new Estados()\n            this.codigo               = ''\n        }\n    },\n    components: {\n        Registros,\n        Memoria,\n        Flags\n    }\n})    \n\n</script>","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=a23016ac\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App)\n}).$mount('#app')\n"],"sourceRoot":""}